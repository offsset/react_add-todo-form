{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","title","id","TodoList","post","map","postUser","username","completed","userId","usersFromServer","find","App","useState","setTitle","setUser","todo","setTodo","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","type","value","onChange","currentTarget","defaultValue","target","disabled","userSelect","onClick","sort","a","b","length","push","userUFS","addTodoUser","ReactDOM","render","document","getElementById"],"mappings":"4NAMaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCHMG,EAA4B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAON,EAAW,EAAXA,KACjD,OACE,0BACE,UAASA,EAAOA,EAAKO,GAAK,GAC1BJ,UAAU,+BAFZ,UAIE,oBAAIA,UAAU,kBAAd,SACGG,IAEFN,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCVlBQ,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mCACGA,EAAKC,KAAI,SAACC,GAAD,OACRA,GACE,cAAC,EAAD,CACEL,MAAOK,EAASL,MAChBN,KAAMW,EAASX,MACVW,EAASJ,UCfX,GACb,CACEA,GAAI,EACJL,KAAM,gBACNU,SAAU,OACVX,MAAO,qBAET,CACEM,GAAI,EACJL,KAAM,eACNU,SAAU,YACVX,MAAO,qBAET,CACEM,GAAI,EACJL,KAAM,mBACNU,SAAU,WACVX,MAAO,sBAET,CACEM,GAAI,EACJL,KAAM,mBACNU,SAAU,WACVX,MAAO,6BAET,CACEM,GAAI,EACJL,KAAM,mBACNU,SAAU,SACVX,MAAO,4BAET,CACEM,GAAI,EACJL,KAAM,uBACNU,SAAU,mBACVX,MAAO,2BAET,CACEM,GAAI,EACJL,KAAM,kBACNU,SAAU,eACVX,MAAO,0BAET,CACEM,GAAI,EACJL,KAAM,2BACNU,SAAU,gBACVX,MAAO,wBAET,CACEM,GAAI,EACJL,KAAM,kBACNU,SAAU,WACVX,MAAO,2BAET,CACEM,GAAI,GACJL,KAAM,qBACNU,SAAU,iBACVX,MAAO,2BChDX,IAAMQ,ECXS,CACb,CACEF,GAAI,EACJD,MAAO,qBACPO,WAAW,EACXC,OAAQ,GAEV,CACEP,GAAI,GACJD,MAAO,kBACPO,WAAW,EACXC,OAAQ,GAEV,CACEP,GAAI,EACJD,MAAO,qCACPO,WAAW,EACXC,OAAQ,IDNiBJ,KAAI,SAACC,GAAD,mBAAC,eAE3BA,GAF0B,IAG7BX,MAPaO,EAOCI,EAASG,OANlBC,EAAgBC,MAAK,SAAChB,GAAD,OAAUA,EAAKO,KAAOA,MAAO,QAD3D,IAAiBA,KA2BV,IAAMU,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAAwBD,mBAAS,KAAjC,mBAAOlB,EAAP,KAAaoB,EAAb,KACA,EAAwBF,mBAAST,GAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKvB,UAAU,MAAf,UACE,+CAEA,uBACEwB,OAAO,aACPC,OAAO,OACPC,SAAU,SAACC,GACTA,EAAMC,kBAJV,UAOE,qBAAK5B,UAAU,QAAf,SACE,2CAEE,uBACE6B,KAAK,OACL,UAAQ,aACRC,MAAO3B,EACP4B,SAAU,SAACJ,GACTX,EAASW,EAAMK,cAAcF,OAC7BT,GAAc,MAGjBD,GAAc,sBAAMpB,UAAU,QAAhB,uCAInB,sBAAKA,UAAU,QAAf,UACE,0CAEE,yBACE,UAAQ,aACRiC,aAAcpC,EACdiC,MAAOjC,EACPkC,SAAU,SAACJ,GACTV,EAAQU,EAAMO,OAAOJ,OACrBP,GAAa,IANjB,UASE,wBAAQO,MAAM,IAAIK,UAAQ,EAA1B,2BACCvB,EAAgBL,KAAI,SAAA6B,GAAU,OAC7B,wBACEN,MAAOM,EAAWhC,GAElB,UAAQ,aAHV,SAKGgC,EAAWrC,MAHPqC,EAAWhC,aAUvBkB,GAAa,sBAAMtB,UAAU,QAAhB,qCAGhB,wBACE6B,KAAK,SACL,UAAQ,eACRQ,QAAS,WACM,MAATxC,GACF0B,GAAa,GAGD,KAAVpB,GACFkB,GAAc,GAGH,MAATxB,GAA0B,KAAVM,IAIpBgB,EA/FZ,SAAqBR,EAAeR,GAClC,IAAQC,EAAS,YAAIE,GAAMgC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnC,GAAKoC,EAAEpC,MAAKE,EAAKmC,OAAS,GAA9DrC,GAYR,OAVAE,EAAKoC,KACH,CACEtC,GAAIA,EAAK,EACTD,QACAO,WAAW,EACXC,QAASA,EACTd,KAAMe,EAAgBC,MAAK,SAAA8B,GAAO,OAAIA,EAAQvC,MAAQO,MAAW,OAI9DL,EAkFWsC,CAAY/C,EAAMM,IAC1Ba,EAAS,IACTC,EAAQ,OAlBZ,oBAyBF,yBAASjB,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUM,KAAMY,UExHxB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d5b6ef98.chunk.js","sourcesContent":["import { User } from '../types/User';\n\ntype Props = {\n  user: User ;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { User } from '../types/User';\n\ntype Props = {\n  title: string;\n  user: User | null ;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, user }) => {\n  return (\n    <article\n      data-id={user ? user.id : ''}\n      className=\"TodoInfo TodoInfo--completed\"\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  post: Todo[] ;\n};\n\nexport const TodoList: React.FC<Props> = ({ post }) => {\n  return (\n    <>\n      {post.map((postUser) => (\n        postUser && (\n          <TodoInfo\n            title={postUser.title}\n            user={postUser.user}\n            key={postUser.id}\n          />\n        )\n      )) }\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(id: number) {\n  return usersFromServer.find((user) => user.id === id) || null;\n}\n\nconst post = todosFromServer.map((postUser) => (\n  {\n    ...postUser,\n    user: getUser(postUser.userId),\n  }\n));\n\nfunction addTodoUser(userId:string, title: string) {\n  const { id } = (([...post].sort((a, b) => a.id - b.id))[post.length - 1]);\n\n  post.push(\n    {\n      id: id + 1,\n      title,\n      completed: false,\n      userId: +userId,\n      user: usersFromServer.find(userUFS => userUFS.id === +userId) || null,\n    },\n  );\n\n  return post;\n}\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('0');\n  const [todo, setTodo] = useState(post);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.currentTarget.value);\n                setErrorTitle(false);\n              }}\n            />\n            {errorTitle && <span className=\"error\">Please enter a title</span> }\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              defaultValue={user}\n              value={user}\n              onChange={(event) => {\n                setUser(event.target.value);\n                setErrorUser(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(userSelect => (\n                <option\n                  value={userSelect.id}\n                  key={userSelect.id}\n                  data-cy=\"userSelect\"\n                >\n                  {userSelect.name}\n                </option>\n\n              ))}\n            </select>\n          </label>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            if (user === '0') {\n              setErrorUser(true);\n            }\n\n            if (title === '') {\n              setErrorTitle(true);\n            }\n\n            if (user === '0' && title === '') {\n              return;\n            }\n\n            setTodo(addTodoUser(user, title));\n            setTitle('');\n            setUser('0');\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList post={todo} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}